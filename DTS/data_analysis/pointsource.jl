using SpecialFunctions, DSP
using WGLMakie, Colors


# spherical problem: field generated by a point source

# unit step response evaluated at time t and at a distance r from a point source 
pointsource(r,t,α) =  1/2 * erfc(r/sqrt(4α*t))/r

# load with a period of 24 hour
N = 8760*3 #number of steps
t = 3600 .* collect(1:N) #time in seconds
q =  @. sin(2π*t/(24*3600)) # load

# assumption of ground properties
k,ρ,c = 3.,800.,2600.
α = k/(ρ*c)

# 1. evaluate g as function of r (in meters)
r0 = [0.05,0.5, 1.,1.5, 2., 2.5, 3.,5.,10.,20.] 
g  = [1/(2π*k) * pointsource.(r,t,α) for r in r0]
gg = hcat(g...)

T =  [conv(q,[0,diff(g)...])[1:N] for g in g]
TT = hcat(T...)


function find_peaks_and_phasediff(q,TT)
    # peak (value, index) of the load 
    qpeak = findmax(q)
    qpeak_idx= qpeak[2]

    # peak (value, index) of the response
    Tmax = findmax(TT, dims=1)
    Tmax_idx = [T[1] for T in Tmax[2]]

    phase_diff = Tmax_idx .- qpeak_idx   
    Tmax_val = [T for T in Tmax[1]] 
    return Tmax_val,phase_diff
end



##.
# plot load (with 24 hours period), responses, amplitude dampning and phase shifting

Tmax_val,phase_diff = find_peaks_and_phasediff(q,TT)


nmin, nmax = 100,148

col = colormap("RdBu", length(r0))
fig = Figure(; size = (500, 500))
ax1 = Axis(fig[1, 1:2], yticklabelcolor = :black, rightspinevisible = false, ylabel = "temperature (K)", xlabel = "time(hour)")
ax2 = Axis(fig[1, 1:2], yaxisposition = :right,
    yticklabelcolor = :darkgreen,
    rightspinecolor = :darkgreen,
    ytickcolor = :dodgerblue,  ylabel = "q" )

for k=1:length(r0)
    lines!(ax1, (t./3600)[nmin:nmax], (TT[:,k])[nmin:nmax],color = col[k])
end
lines!(ax2, (t./3600)[nmin:nmax], (q[:])[nmin:nmax],linestyle = :dash, color = :darkgreen)
# linkxaxes!(ax1,ax2)

ax3 = Axis(fig[2, 1], xlabel = "r (m)", ylabel = "log10(A))" )
lines!(ax3, r0, log10.(vec(Tmax_val)))
scatter!(ax3, r0, log10.(vec(Tmax_val)))
ax4 = Axis(fig[2, 2], xlabel = "r (m)", ylabel = "phi [log10(hours)]")
lines!(ax4, r0, log10.(vec(phase_diff)))
scatter!(ax4, r0, log10.(vec(phase_diff)))

Label(fig[0, 1:2], "Amplitude and phase shift for a point source with 24 hours period")

fig

##.


################################
# load with a period of 1 year #
################################

N = 8760*10
t = 3600 .* collect(1:N)
q2 = @. sin(2π*t/(3600*8760))  

T2 =  [conv(q2,[0,diff(g)...])[1:N] for g in g]
TT2 = hcat(T2...)
Tmax_val2,phase_diff2 = find_peaks_and_phasediff(q2,TT2)

##.
# plot load (with 24 hours period), responses, amplitude dampning and phase shifting

Tmax_val2,phase_diff2 = find_peaks_and_phasediff(q2,TT2)

nmin, nmax = 8760*0+1,8760*1

col = colormap("RdBu", length(r0))
fig = Figure(; size = (500, 400))
ax1 = Axis(fig[1, 1:2], yticklabelcolor = :black, rightspinevisible = false, ylabel = "temperature (K)", xlabel = "time(years)")
ax2 = Axis(fig[1, 1:2], yaxisposition = :right,
    yticklabelcolor = :darkgreen,
    rightspinecolor = :darkgreen,
    ytickcolor = :dodgerblue,  ylabel = "q" )

for k=1:length(r0)
    lines!(ax1, (t./(3600*8760))[nmin:nmax], (TT2[:,k])[nmin:nmax],color = col[k])
end
lines!(ax2, (t./(3600*8760))[nmin:nmax], (q2[:])[nmin:nmax],linestyle = :dash, color = :darkgreen)
# linkxaxes!(ax1,ax2)
linkxaxes!(ax1,ax2)

ax3 = Axis(fig[2, 1], xlabel = "r (m)", ylabel = "log10(A))" )
lines!(ax3, r0, log10.(vec(Tmax_val2)))
scatter!(ax3, r0, log10.(vec(Tmax_val2)))
ax4 = Axis(fig[2, 2], xlabel = "r (m)", ylabel = "phi [log10(hour)]")
lines!(ax4, r0, log10.(vec(phase_diff2)))
scatter!(ax4, r0, log10.(vec(phase_diff2)))

Label(fig[0, 1:2], "Amplitude and phase shift for a point source with 1 year period")

fig

##.
